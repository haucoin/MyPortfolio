{"ast":null,"code":"var _jsxFileName = \"/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/EducationCourses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Accordion, Container, Typography, AccordionDetails, AccordionSummary } from '@material-ui/core';\nimport service from '../services/CourseService';\nimport theme from '../theme/theme';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n/**\n * MyPortfolio\n * @Author Holland Aucoin\n * \n * Education Courses\n * @Summary This component displays the accordian display of educational courses\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(16),\n    flexBasis: '100%',\n    flexShrink: 0\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary\n  }\n}));\nexport default function App() {\n  _s();\n\n  // Creating variables of accordion expansion and course information\n  const [expanded, setExpanded] = React.useState(false);\n  const [courses, setCourses] = React.useState([]); // Change expanded state when pressed\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  }; // Use useEffect method to call backend for course information and wait for response\n\n\n  useEffect(() => {\n    service.getCourses().then(response => {\n      setCourses(response.data);\n    });\n  }, []); // Split the list of courses in half to create 2 accordions (sided by side)\n\n  let firstCourses = courses.slice(0, courses.length / 2);\n  let secondCourses = courses.slice(courses.length / 2, courses.length);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      align: \"center\",\n      style: {\n        paddingTop: \"35px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        width: \"50px\",\n        align: \"center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      style: {\n        paddingBottom: \"30px\",\n        paddingTop: \"20px\",\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: firstCourses.map(course => /*#__PURE__*/_jsxDEV(Accordion, {\n          expanded: expanded === 'panel' + course._id,\n          onChange: handleChange('panel' + course._id),\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 45\n            }, this),\n            \"aria-controls\": \"panelbh-content\" + course._id,\n            id: \"panelbh-header\" + course._id,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.heading,\n              children: course.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"textSecondary\",\n              children: course.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), (() => {\n            if (course.technology.length !== 0) {\n              let technologies = \"\";\n              course.technology.map((tech, index) => technologies += tech + (index < course.technology.length - 1 ? ',\\u00A0 ' : ' '));\n              return /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Technologies Used:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 90\n                  }, this), \" \", technologies]\n                }, course, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 25\n              }, this);\n            }\n          })(), (() => {\n            if (course.projectId != null && course.projectId !== \"\") {\n              return /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                style: {\n                  justifyContent: \"flex-end\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: {\n                    pathname: '/project',\n                    state: {\n                      projectId: course.projectId\n                    }\n                  },\n                  style: {\n                    textDecoration: 'none',\n                    paddingRight: \"25px\"\n                  },\n                  children: \"View Project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 23\n                }, this)\n              }, course._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this);\n            }\n          })()]\n        }, course._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: secondCourses.map(course => /*#__PURE__*/_jsxDEV(Accordion, {\n          expanded: expanded === 'panel' + course._id,\n          onChange: handleChange('panel' + course._id),\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 45\n            }, this),\n            \"aria-controls\": \"panelbh-content\" + course._id,\n            id: \"panelbh-header\" + course._id,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.heading,\n              children: course.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"textSecondary\",\n              children: course.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), (() => {\n            if (course.technology.length !== 0) {\n              let technologies = \"\";\n              course.technology.map((tech, index) => technologies += tech + (index < course.technology.length - 1 ? ',\\u00A0 ' : ' '));\n              return /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Technologies Used:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 90\n                  }, this), \" \", technologies]\n                }, course, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 25\n              }, this);\n            }\n          })(), (() => {\n            if (course.projectId != null && course.projectId !== \"\") {\n              return /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                style: {\n                  justifyContent: \"flex-end\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: {\n                    pathname: '/project',\n                    state: {\n                      projectId: course.projectId\n                    }\n                  },\n                  style: {\n                    textDecoration: 'none',\n                    paddingRight: \"25px\"\n                  },\n                  children: \"View Project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 23\n                }, this)\n              }, course._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 21\n              }, this);\n            }\n          })()]\n        }, course._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"t53Ce8OIbz7dkcGJ/AsO4uKQQng=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/EducationCourses.js"],"names":["React","useEffect","Link","Grid","Accordion","Container","Typography","AccordionDetails","AccordionSummary","service","theme","makeStyles","ExpandMoreIcon","useStyles","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","App","expanded","setExpanded","useState","courses","setCourses","handleChange","panel","event","isExpanded","getCourses","then","response","data","firstCourses","slice","length","secondCourses","classes","paddingTop","paddingBottom","display","justifyContent","flexWrap","map","course","_id","name","description","technology","technologies","tech","index","projectId","pathname","state","textDecoration","paddingRight"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Accordion, Container, Typography, AccordionDetails, AccordionSummary } from '@material-ui/core';\nimport service from '../services/CourseService';\nimport theme from '../theme/theme';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n/**\n * MyPortfolio\n * @Author Holland Aucoin\n * \n * Education Courses\n * @Summary This component displays the accordian display of educational courses\n */\n\nconst useStyles = makeStyles(() => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(16),\n    flexBasis: '100%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function App() {\n\n  // Creating variables of accordion expansion and course information\n  const [expanded, setExpanded] = React.useState(false);\n  const [courses, setCourses] = React.useState([]);\n\n  // Change expanded state when pressed\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  // Use useEffect method to call backend for course information and wait for response\n  useEffect(() => {\n      service.getCourses().then(response => {\n        setCourses(response.data);\n      })\n  }, []);\n\n  // Split the list of courses in half to create 2 accordions (sided by side)\n  let firstCourses = courses.slice(0, courses.length/2);\n  let secondCourses = courses.slice(courses.length/2, courses.length);\n\n  const classes = useStyles();\n\n  return (\n\n    <section>\n    <div align=\"center\" style={{paddingTop: \"35px\"}}>\n      <Typography variant=\"h5\" gutterBottom={true}>Courses</Typography>\n      <hr width=\"50px\" align=\"center\"/>\n    </div>\n    <Container maxWidth=\"md\" style={{paddingBottom: \"30px\", paddingTop: \"20px\", display: 'flex', justifyContent: 'space-evenly', flexWrap: 'wrap',}}>\n        {/* First half of courses */}\n        <Grid item xs={12} sm={6} >\n          {/* Iterate through each course to make accordions */}\n          {firstCourses.map(course => (\n            <Accordion key={course._id} expanded={expanded === 'panel' + course._id} onChange={handleChange('panel' + course._id)}>\n              <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panelbh-content\" + course._id} id={\"panelbh-header\" + course._id} >\n                <Typography className={classes.heading}>{course.name}</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Typography variant=\"body1\" color=\"textSecondary\">{course.description}</Typography>\n              </AccordionDetails>\n                  {/* Adjust technologies array into a string with spaces and commas if the course contains technologies */}\n                  {(() => {\n                    if (course.technology.length !== 0) {\n                      let technologies = \"\";\n\n                      course.technology.map((tech, index) => (\n                        technologies += tech + (index < course.technology.length - 1 ? ',\\u00A0 ' : ' ')\n                      ))\n\n                      return (\n                        <AccordionDetails>\n                          <Typography key={course} variant=\"body2\" color=\"textSecondary\"><b>Technologies Used:</b> {technologies}</Typography>\n                        </AccordionDetails>\n                      )\n                    }\n                  })()}\n                  {/* Add button to view the associated project if the course contains a project */}\n                {(() => {\n                  if (course.projectId != null && course.projectId !== \"\") {\n                    return (\n                    <AccordionDetails key={course._id} style={{ justifyContent: \"flex-end\" }}>\n                      <Link to={{ pathname: '/project', state: { projectId: course.projectId } }} style={{ textDecoration: 'none', paddingRight: \"25px\" }}>View Project</Link>\n                    </AccordionDetails>\n                    )\n                  }\n                })()}\n            </Accordion>\n          ))} \n        </Grid>\n        {/* Second hald of courses */}\n        <Grid item xs={12} sm={6}>\n          {/* Iterate through each course to make accordions */}\n          {secondCourses.map(course => (\n            <Accordion key={course._id} expanded={expanded === 'panel' + course._id} onChange={handleChange('panel' + course._id)}>\n              <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panelbh-content\" + course._id} id={\"panelbh-header\" + course._id} >\n                <Typography className={classes.heading}>{course.name}</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Typography variant=\"body1\" color=\"textSecondary\">{course.description}</Typography>\n              </AccordionDetails>\n                  {/* Adjust technologies array into a string with spaces and commas if the course contains technologies */}\n                  {(() => {\n                    if (course.technology.length !== 0) {\n                      let technologies = \"\";\n\n                      course.technology.map((tech, index) => (\n                        technologies += tech + (index < course.technology.length - 1 ? ',\\u00A0 ' : ' ')\n                      ))\n\n                      return (\n                        <AccordionDetails>\n                          <Typography key={course} variant=\"body2\" color=\"textSecondary\"><b>Technologies Used:</b> {technologies}</Typography>\n                        </AccordionDetails>\n                      )\n                    }\n                  })()}\n                {/* Add button to view the associated project if the course contains a project */}\n                {(() => {\n                  if (course.projectId != null && course.projectId !== \"\") {\n                    return (\n                    <AccordionDetails key={course._id} style={{ justifyContent: \"flex-end\" }}>\n                      <Link to={{ pathname: '/project', state: { projectId: course.projectId } }} style={{ textDecoration: 'none', paddingRight: \"25px\" }}>View Project</Link>\n                    </AccordionDetails>\n                    )\n                  }\n                })()}\n            </Accordion>\n          ))}\n        </Grid>\n      </Container>\n    </section>\n\n  )\n}"]},"metadata":{},"sourceType":"module"}