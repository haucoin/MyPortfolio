{"ast":null,"code":"var _jsxFileName = \"/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/EducationSkills.js\";\nimport React, { useEffect } from 'react';\nimport { Container, Box, Typography, Grid, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport theme from '../theme/theme';\nimport service from '../services/SkillService';\nimport { Mail, LinkedIn, GitHub } from '@material-ui/icons';\nconst useStyles = makeStyles(() => ({\n  icon: {\n    marginBottom: theme.spacing(1)\n  }\n}));\nexport default function App() {\n  const [languageSkills, setLanguages] = React.useState([]);\n  const [IDESkills, setIDEs] = React.useState([]);\n  const [toolSkills, setTools] = React.useState([]);\n  const [SDSkills, setSD] = React.useState([]);\n  const [frameworkSkills, setFrameworks] = React.useState([]);\n  const [DPSkills, setDP] = React.useState([]);\n  const [agileSkills, setAgile] = React.useState([]);\n  const [serverSkills, setServers] = React.useState([]);\n  const [cloudSkills, setClouds] = React.useState([]);\n  const [databaseSkills, setDatabases] = React.useState([]);\n  useEffect(() => {\n    service.getSkillsByType(\"Languages\").then(response => {\n      setLanguages(response.data);\n    });\n    service.getSkillsByType(\"IDE\").then(response => {\n      setIDEs(response.data);\n    });\n    service.getSkillsByType(\"Tools\").then(response => {\n      setTools(response.data);\n    });\n    service.getSkillsByType(\"Software Design\").then(response => {\n      setSD(response.data);\n    });\n    service.getSkillsByType(\"Web Frameworks\").then(response => {\n      setFrameworks(response.data);\n    });\n    service.getSkillsByType(\"Design Patterns\").then(response => {\n      setDP(response.data);\n    });\n    service.getSkillsByType(\"Agile Scrum\").then(response => {\n      setAgile(response.data);\n    });\n    service.getSkillsByType(\"Application Servers\").then(response => {\n      setServers(response.data);\n    });\n    service.getSkillsByType(\"Cloud Services\").then(response => {\n      setClouds(response.data);\n    });\n    service.getSkillsByType(\"Databases\").then(response => {\n      setDatabases(response.data);\n    });\n  }, []);\n  let languages = \"\";\n  languageSkills.map((language, index) => languages += language + (index < languageSkills.length - 1 ? ',\\u00A0 ' : ' '));\n  let IDEs = \"\";\n  IDESkills.map((IDE, index) => IDEs += IDE + (index < IDESkills.length - 1 ? ',\\u00A0 ' : ' '));\n  let tools = \"\";\n  toolSkills.map((tool, index) => tools += tool + (index < toolSkills.length - 1 ? ',\\u00A0 ' : ' '));\n  let SDs = \"\";\n  SDSkills.map((SD, index) => SDs += SD + (index < SDSkills.length - 1 ? ',\\u00A0 ' : ' '));\n  let frameworks = \"\";\n  frameworkSkills.map((framework, index) => frameworks += framework + (index < frameworkSkills.length - 1 ? ',\\u00A0 ' : ' '));\n  let DPs = \"\";\n  DPSkills.map((DP, index) => DPs += DP + (index < DPSkills.length - 1 ? ',\\u00A0 ' : ' '));\n  let agiles = \"\";\n  agileSkills.map((agile, index) => agiles += agile + (index < agileSkills.length - 1 ? ',\\u00A0 ' : ' '));\n  let servers = \"\";\n  serverSkills.map((server, index) => servers += server + (index < serverSkills.length - 1 ? ',\\u00A0 ' : ' '));\n  let clouds = \"\";\n  cloudSkills.map((cloud, index) => clouds += cloud + (index < cloudSkills.length - 1 ? ',\\u00A0 ' : ' '));\n  let databases = \"\";\n  databaseSkills.map((database, index) => databases += database + (index < databaseSkills.length - 1 ? ',\\u00A0 ' : ' '));\n  let skills = [languages, IDEs, tools, SDs, frameworks, DPs, agiles, servers, clouds, databases];\n  console.log(databaseSkills);\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    py: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, skills.map(skill => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Mail, {\n    color: theme.blue,\n    fontSize: \"large\",\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h3\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, \"Accessibility\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, skill))))))));\n}","map":{"version":3,"sources":["/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/EducationSkills.js"],"names":["React","useEffect","Container","Box","Typography","Grid","Paper","makeStyles","theme","service","Mail","LinkedIn","GitHub","useStyles","icon","marginBottom","spacing","App","languageSkills","setLanguages","useState","IDESkills","setIDEs","toolSkills","setTools","SDSkills","setSD","frameworkSkills","setFrameworks","DPSkills","setDP","agileSkills","setAgile","serverSkills","setServers","cloudSkills","setClouds","databaseSkills","setDatabases","getSkillsByType","then","response","data","languages","map","language","index","length","IDEs","IDE","tools","tool","SDs","SD","frameworks","framework","DPs","DP","agiles","agile","servers","server","clouds","cloud","databases","database","skills","console","log","classes","skill","blue"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Container, Box, Typography, Grid, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport theme from '../theme/theme';\nimport service from '../services/SkillService';\nimport { Mail, LinkedIn, GitHub } from '@material-ui/icons';\n\nconst useStyles = makeStyles(() => ({\n  icon: {\n    marginBottom: theme.spacing(1),\n  }\n}));\n\nexport default function App() {\n\n  const [languageSkills, setLanguages] = React.useState([]);\n  const [IDESkills, setIDEs] = React.useState([]);\n  const [toolSkills, setTools] = React.useState([]);\n  const [SDSkills, setSD] = React.useState([]);\n  const [frameworkSkills, setFrameworks] = React.useState([]);\n  const [DPSkills, setDP] = React.useState([]);\n  const [agileSkills, setAgile] = React.useState([]);\n  const [serverSkills, setServers] = React.useState([]);\n  const [cloudSkills, setClouds] = React.useState([]);\n  const [databaseSkills, setDatabases] = React.useState([]);\n\n  useEffect(() => {\n    service.getSkillsByType(\"Languages\").then(response => {\n      setLanguages(response.data);\n    })\n    service.getSkillsByType(\"IDE\").then(response => {\n      setIDEs(response.data);\n    })\n    service.getSkillsByType(\"Tools\").then(response => {\n      setTools(response.data);\n    })\n    service.getSkillsByType(\"Software Design\").then(response => {\n      setSD(response.data);\n    })\n    service.getSkillsByType(\"Web Frameworks\").then(response => {\n      setFrameworks(response.data);\n    })\n    service.getSkillsByType(\"Design Patterns\").then(response => {\n      setDP(response.data);\n    })\n    service.getSkillsByType(\"Agile Scrum\").then(response => {\n      setAgile(response.data);\n    })\n    service.getSkillsByType(\"Application Servers\").then(response => {\n      setServers(response.data);\n    })\n    service.getSkillsByType(\"Cloud Services\").then(response => {\n      setClouds(response.data);\n    })\n    service.getSkillsByType(\"Databases\").then(response => {\n      setDatabases(response.data);\n    })\n  }, []);\n\n  let languages = \"\";\n  languageSkills.map((language, index) => (\n    languages += language + (index < languageSkills.length - 1 ? ',\\u00A0 ' : ' ')\n  ))\n\n  let IDEs = \"\";\n  IDESkills.map((IDE, index) => (\n    IDEs += IDE + (index < IDESkills.length - 1 ? ',\\u00A0 ' : ' ')\n  ))\n\n  let tools = \"\";\n  toolSkills.map((tool, index) => (\n    tools += tool + (index < toolSkills.length - 1 ? ',\\u00A0 ' : ' ')\n  ))\n\n  let SDs = \"\";\n  SDSkills.map((SD, index) => (\n    SDs += SD + (index < SDSkills.length - 1 ? ',\\u00A0 ' : ' ')\n  ))\n\n  let frameworks = \"\";\n  frameworkSkills.map((framework, index) => (\n    frameworks += framework + (index < frameworkSkills.length - 1 ? ',\\u00A0 ' : ' ')\n  ))\n\n  let DPs = \"\";\n  DPSkills.map((DP, index) => (\n    DPs += DP + (index < DPSkills.length - 1 ? ',\\u00A0 ' : ' ')\n  ))\n\n  let agiles = \"\";\n  agileSkills.map((agile, index) => (\n    agiles += agile + (index < agileSkills.length - 1 ? ',\\u00A0 ' : ' ')\n  ))\n\n  let servers = \"\";\n  serverSkills.map((server, index) => (\n    servers += server + (index < serverSkills.length - 1 ? ',\\u00A0 ' : ' ')\n  ))\n\n  let clouds = \"\";\n  cloudSkills.map((cloud, index) => (\n    clouds += cloud + (index < cloudSkills.length - 1 ? ',\\u00A0 ' : ' ')\n  ))\n\n  let databases = \"\";\n  databaseSkills.map((database, index) => (\n    databases += database + (index < databaseSkills.length - 1 ? ',\\u00A0 ' : ' ')\n  ))\n\n  let skills = [languages, IDEs, tools, SDs, frameworks, DPs, agiles, servers, clouds, databases];\nconsole.log(databaseSkills);\n\n  const classes = useStyles();\n\n  return (\n\n    <Paper>\n      <section>\n        <Container maxWidth=\"md\">\n          <Box py={6}>\n            <Grid container spacing={4}>\n              \n\n              {skills.map((skill) => (\n                  <Grid item xs={6} md={3}>\n                    <Mail color={theme.blue} fontSize=\"large\" className={classes.icon} />\n                    <Typography variant=\"h6\" component=\"h3\" gutterBottom={true}>Accessibility</Typography>\n                    <Typography variant=\"body1\" component=\"p\">{skill}</Typography>\n                  </Grid>\n                ))\n              }\n\n            </Grid>\n          </Box>\n        </Container>\n      </section>\n    </Paper>\n  )\n}"]},"metadata":{},"sourceType":"module"}