{"ast":null,"code":"var _jsxFileName = \"/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/ContactForm.js\";\nimport React, { useState } from 'react';\nimport { Container, Box, Typography, Grid, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport theme from '../theme/theme';\nimport me from '../images/Me2.jpg';\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(10),\n      height: theme.spacing(10)\n    }\n  },\n  button: {\n    color: theme.palette.text.black,\n    backgroundColor: theme.palette.background.white,\n    height: \"50px\"\n  },\n  halfLg: {\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: theme.breakpoints.values['lg'] / 2\n    }\n  },\n  firstBox: {\n    [theme.breakpoints.up('lg')]: {\n      marginLeft: 'auto',\n      paddingRight: theme.spacing(6)\n    }\n  },\n  secondBox: {\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: theme.spacing(6)\n    }\n  },\n  fullHeightImage: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    objectFit: 'cover',\n    height: 768,\n    width: '100%'\n  }\n}));\nexport default function App() {\n  const classes = useStyles();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [subject, setSubject] = useState('');\n  const [message, setMessage] = useState('');\n\n  const onChangeFirstName = event => {\n    setFirstName(event.target.value);\n  };\n\n  const onChangeLastName = event => {\n    setLastName(event.target.value);\n  };\n\n  const onChangeEmail = event => {\n    setEmail(event.target.value);\n  };\n\n  const onChangeSubject = event => {\n    setSubject(event.target.value);\n  };\n\n  const onChangeMessage = event => {\n    setMessage(event.target.value);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <section>\n    //     <Fade/>\n    //     <div className={classes.root}>\n    //         <Paper elevation={3}>\n    //             <Button aria-label=\"Phone\" style={{ width: \"100%\", height: \"100%\" }} onClick={() => window.open(\"https://www.linkedin.com/in/hollandaucoin/\", \"_blank\")}>\n    //                 <Phone style={{ fontSize: 70, color: theme.palette.pink.main }} />\n    //             </Button>\n    //         </Paper>\n    //         <Paper elevation={3}>\n    //             <Button style={{ width: \"100%\", height: \"100%\" }} aria-label=\"Mail\" key=\"Email\" component=\"a\" href=\"mailto:holland.aucoin2@gmail.com\">\n    //                 <Mail style={{ fontSize: 70, color: theme.palette.purple.main }} />\n    //             </Button>\n    //         </Paper>\n    //         <Paper elevation={3}>\n    //             <Button aria-label=\"LinkedIn\" style={{ width: \"100%\", height: \"100%\" }} onClick={() => window.open(\"https://www.linkedin.com/in/hollandaucoin/\", \"_blank\")}>\n    //                 <LinkedIn style={{ fontSize: 70, color: theme.palette.blue.main }} />\n    //             </Button>\n    //         </Paper>\n    //     </div>    \n    // </section>\n    React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      pt: 10,\n      pb: 8,\n      display: \"flex\",\n      className: [classes.halfLg, classes.firstBox],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      mb: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      component: \"h2\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, \"Let's talk about the future\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      paragraph: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, \"We're here to answer your questions and discuss the decentralized future of the internet.\")), /*#__PURE__*/React.createElement(ValidatorForm, {\n      onError: errors => console.log(errors),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      variant: \"outlined\",\n      fullWidth: true,\n      color: theme.palette.blue.main,\n      label: \"First Name *\",\n      onChange: onChangeFirstName,\n      name: \"firstName\",\n      value: firstName,\n      validators: ['required', 'matchRegexp:^[a-zA-Z]+$', 'matchRegexp:^.{2,15}$'],\n      errorMessages: ['This field is required', 'Can only contain letters', 'Must be 2 to 15 characters'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 34\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      variant: \"outlined\",\n      fullWidth: true,\n      label: \"Last Name *\",\n      onChange: onChangeLastName,\n      name: \"lastName\",\n      value: lastName,\n      validators: ['required', 'matchRegexp:^[a-zA-Z]+$', 'matchRegexp:^.{2,15}$'],\n      errorMessages: ['This field is required', 'Can only contain letters', 'Must be 2 to 15 characters'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      variant: \"outlined\",\n      fullWidth: true,\n      label: \"Email *\",\n      onChange: onChangeEmail,\n      name: \"email\",\n      value: email,\n      validators: ['required', 'isEmail'],\n      errorMessages: ['This field is required', 'Invalid email'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      variant: \"outlined\",\n      fullWidth: true,\n      label: \"Subject *\",\n      onChange: onChangeSubject,\n      name: \"subject\",\n      value: subject,\n      validators: ['required'],\n      errorMessages: ['This field is required'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      variant: \"outlined\",\n      fullWidth: true,\n      multiline: true,\n      rows: 5,\n      label: \"Message *\",\n      onChange: onChangeMessage,\n      name: \"message\",\n      value: message,\n      validators: ['required'],\n      errorMessages: ['This field is required'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Box, {\n      my: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: classes.button,\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 33\n      }\n    }, \"SUBMIT\")))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      position: \"relative\",\n      height: 768,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: classes.fullHeightImage,\n      src: me,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    })))))\n  );\n} // linear-gradient(140deg, #F3B0F2 5%, #DF63D3 15%, #8C53CC 50%, #0A8DC8 75%, #51E2EB 100%)\"","map":{"version":3,"sources":["/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/ContactForm.js"],"names":["React","useState","Container","Box","Typography","Grid","Button","makeStyles","ValidatorForm","TextValidator","theme","me","useStyles","root","display","justifyContent","flexWrap","margin","spacing","width","height","button","color","palette","text","black","backgroundColor","background","white","halfLg","breakpoints","up","maxWidth","values","firstBox","marginLeft","paddingRight","secondBox","paddingLeft","fullHeightImage","position","top","left","right","bottom","objectFit","App","classes","firstName","setFirstName","lastName","setLastName","email","setEmail","subject","setSubject","message","setMessage","onChangeFirstName","event","target","value","onChangeLastName","onChangeEmail","onChangeSubject","onChangeMessage","errors","console","log","blue","main"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport { Container, Box, Typography, Grid, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport theme from '../theme/theme';\n\nimport me from '../images/Me2.jpg';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(1),\n            width: theme.spacing(10),\n            height: theme.spacing(10),\n        },\n    },\n    button: {\n        color: theme.palette.text.black, \n        backgroundColor: theme.palette.background.white, \n        height: \"50px\"\n    },\n    halfLg: {\n        [theme.breakpoints.up('lg')]: {\n          maxWidth: theme.breakpoints.values['lg'] / 2\n        }\n      },\n      firstBox: {\n        [theme.breakpoints.up('lg')]: {\n          marginLeft: 'auto',\n          paddingRight: theme.spacing(6)\n        }\n      },\n      secondBox: {\n        [theme.breakpoints.up('lg')]: {\n          paddingLeft: theme.spacing(6)\n        }\n      },\n      fullHeightImage: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        objectFit: 'cover',\n        height: 768,\n        width: '100%'\n      }\n}));\n\nexport default function App() {\n\n    const classes = useStyles();\n\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [subject, setSubject] = useState('');\n    const [message, setMessage] = useState('');\n  \n    const onChangeFirstName = (event) => {\n      setFirstName(event.target.value);\n    }\n    const onChangeLastName = (event) => {\n      setLastName(event.target.value);\n    }\n    const onChangeEmail = (event) => {\n      setEmail(event.target.value);\n    }\n    const onChangeSubject= (event) => {\n        setSubject(event.target.value);\n    }\n    const onChangeMessage = (event) => {\n        setMessage(event.target.value);\n    }\n\n    return (\n\n        // <section>\n        //     <Fade/>\n        //     <div className={classes.root}>\n        //         <Paper elevation={3}>\n        //             <Button aria-label=\"Phone\" style={{ width: \"100%\", height: \"100%\" }} onClick={() => window.open(\"https://www.linkedin.com/in/hollandaucoin/\", \"_blank\")}>\n        //                 <Phone style={{ fontSize: 70, color: theme.palette.pink.main }} />\n        //             </Button>\n        //         </Paper>\n        //         <Paper elevation={3}>\n        //             <Button style={{ width: \"100%\", height: \"100%\" }} aria-label=\"Mail\" key=\"Email\" component=\"a\" href=\"mailto:holland.aucoin2@gmail.com\">\n        //                 <Mail style={{ fontSize: 70, color: theme.palette.purple.main }} />\n        //             </Button>\n        //         </Paper>\n        //         <Paper elevation={3}>\n        //             <Button aria-label=\"LinkedIn\" style={{ width: \"100%\", height: \"100%\" }} onClick={() => window.open(\"https://www.linkedin.com/in/hollandaucoin/\", \"_blank\")}>\n        //                 <LinkedIn style={{ fontSize: 70, color: theme.palette.blue.main }} />\n        //             </Button>\n        //         </Paper>\n        //     </div>    \n        // </section>\n\n        <section>\n        <Grid container>\n          <Grid item xs={12} md={6}>\n            <Box pt={10} pb={8} display=\"flex\" className={[classes.halfLg, classes.firstBox]}>\n              <Container>\n                <Box mb={4}>\n                  <Typography variant=\"h4\" component=\"h2\" gutterBottom={true}>Let's talk about the future</Typography>\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\" paragraph={true}>We're here to answer your questions and discuss the decentralized future of the internet.</Typography>\n                </Box>\n      \n                <ValidatorForm onError={errors => console.log(errors)}>\n                             <Grid container spacing={2}>\n                                 <Grid item xs={12} sm={6}>\n                                 <TextValidator variant=\"outlined\" fullWidth color={theme.palette.blue.main}\n                                    label=\"First Name *\"\n                                    onChange={onChangeFirstName}\n                                    name=\"firstName\"\n                                    value={firstName}\n                                    validators={['required', 'matchRegexp:^[a-zA-Z]+$', 'matchRegexp:^.{2,15}$']}\n                                    errorMessages={['This field is required', 'Can only contain letters', 'Must be 2 to 15 characters']}\n                                />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextValidator variant=\"outlined\" fullWidth\n                                        label=\"Last Name *\"\n                                        onChange={onChangeLastName}\n                                        name=\"lastName\"\n                                        value={lastName}\n                                        validators={['required', 'matchRegexp:^[a-zA-Z]+$', 'matchRegexp:^.{2,15}$']}\n                                        errorMessages={['This field is required', 'Can only contain letters', 'Must be 2 to 15 characters']}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                <TextValidator variant=\"outlined\" fullWidth\n                                    label=\"Email *\"\n                                    onChange={onChangeEmail}\n                                    name=\"email\"\n                                    value={email}\n                                    validators={['required', 'isEmail']}\n                                    errorMessages={['This field is required', 'Invalid email']}\n                                />\n                                </Grid>\n                                <Grid item xs={12}>\n                                <TextValidator variant=\"outlined\" fullWidth\n                                    label=\"Subject *\"\n                                    onChange={onChangeSubject}\n                                    name=\"subject\"\n                                    value={subject}\n                                    validators={['required']}\n                                    errorMessages={['This field is required']}\n                                />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextValidator variant=\"outlined\" fullWidth multiline rows={5}\n                                        label=\"Message *\"\n                                        onChange={onChangeMessage}\n                                        name=\"message\"\n                                        value={message}\n                                        validators={['required']}\n                                        errorMessages={['This field is required']}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Box my={2}>\n                                <Button className={classes.button} type=\"submit\" fullWidth variant=\"contained\">SUBMIT</Button>\n                            </Box>\n                        </ValidatorForm>\n              </Container>\n            </Box> \n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Box position=\"relative\" height={768}>\n              <img className={classes.fullHeightImage} src={me} alt=\"\" />\n            </Box>\n          </Grid>\n        </Grid>\n      </section>\n\n    )\n}\n\n// linear-gradient(140deg, #F3B0F2 5%, #DF63D3 15%, #8C53CC 50%, #0A8DC8 75%, #51E2EB 100%)\""]},"metadata":{},"sourceType":"module"}