{"ast":null,"code":"var _jsxFileName = \"/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/ContactForm.js\";\nimport React, { useState } from 'react'; // import MediaQuery from 'react-responsive';\n\nimport { Container, Box, Typography, Grid, Button, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Mail, LinkedIn } from '@material-ui/icons';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(12),\n      height: theme.spacing(12)\n    }\n  },\n  button: {\n    color: theme.palette.text.black,\n    backgroundColor: theme.palette.background.white,\n    height: \"50px\"\n  }\n}));\nexport default function App() {\n  const classes = useStyles();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [subject, setSubject] = useState('');\n  const [message, setMessage] = useState('');\n\n  const onChangeFirstName = event => {\n    setFirstName(event.target.value);\n  };\n\n  const onChangeLastName = event => {\n    setLastName(event.target.value);\n  };\n\n  const onChangeEmail = event => {\n    setEmail(event.target.value);\n  };\n\n  const onChangeSubject = event => {\n    setSubject(event.target.value);\n  };\n\n  const onChangeMessage = event => {\n    setMessage(event.target.value);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <section>\n    //     <Container maxWidth=\"xs\">\n    //         <Box pt={8} pb={10}>\n    //             <Box mb={6} textAlign=\"center\">\n    //                 <Typography variant=\"h4\" component=\"h2\" gutterBottom={true}>CONTACT</Typography>\n    //                 <hr width=\"60px\" />\n    //                 <Typography variant=\"subtitle1\" color=\"textSecondary\" paragraph={true}>We're here to answer your questions and discuss the decentralized future of the internet. Let's talk!</Typography>\n    //                 <div className={classes.root}>\n    //                     <Paper elevation={3}>\n    //                         <Button aria-label=\"LinkedIn\" style={{ width: \"100%\", height: \"100%\" }} onClick={() => window.open(\"https://www.linkedin.com/in/hollandaucoin/\", \"_blank\")}>\n    //                             <LinkedIn style={{ fontSize: 80, fill: \"linear-gradient(140deg, #F3B0F2 5%, #DF63D3 15%, #8C53CC 50%, #0A8DC8 75%, #51E2EB 100%)\" }} />\n    //                         </Button>\n    //                     </Paper>\n    //                     <Paper elevation={3}>\n    //                         <Button style={{ width: \"100%\", height: \"100%\" }} aria-label=\"Mail\" key=\"Email\" component=\"a\" href=\"mailto:holland.aucoin2@gmail.com\">\n    //                             <Mail style={{ fontSize: 80 }} />\n    //                         </Button>\n    //                     </Paper>\n    //                     <Paper elevation={3}>\n    //                         <Button aria-label=\"LinkedIn\" style={{ width: \"100%\", height: \"100%\" }} onClick={() => window.open(\"https://www.linkedin.com/in/hollandaucoin/\", \"_blank\")}>\n    //                             <LinkedIn style={{ fontSize: 80 }} />\n    //                         </Button>\n    //                     </Paper>\n    //                 </div>\n    //             </Box>\n    //             <Box>\n    //                 <ValidatorForm onError={errors => console.log(errors)}>\n    //                     <Grid container spacing={2}>\n    //                         <Grid item xs={12} sm={6}>\n    //                         <TextValidator variant=\"outlined\" fullWidth\n    //                             label=\"First Name *\"\n    //                             onChange={onChangeFirstName}\n    //                             name=\"firstName\"\n    //                             value={firstName}\n    //                             validators={['required', 'matchRegexp:^[a-zA-Z]+$', 'matchRegexp:^.{2,15}$']}\n    //                             errorMessages={['This field is required', 'Can only contain letters', 'Must be 2 to 15 characters']}\n    //                         />\n    //                         </Grid>\n    //                         <Grid item xs={12} sm={6}>\n    //                             <TextValidator variant=\"outlined\" fullWidth\n    //                                 label=\"Last Name *\"\n    //                                 onChange={onChangeLastName}\n    //                                 name=\"lastName\"\n    //                                 value={lastName}\n    //                                 validators={['required', 'matchRegexp:^[a-zA-Z]+$', 'matchRegexp:^.{2,15}$']}\n    //                                 errorMessages={['This field is required', 'Can only contain letters', 'Must be 2 to 15 characters']}\n    //                             />\n    //                         </Grid>\n    //                         <Grid item xs={12}>\n    //                         <TextValidator variant=\"outlined\" fullWidth\n    //                             label=\"Email *\"\n    //                             onChange={onChangeEmail}\n    //                             name=\"email\"\n    //                             value={email}\n    //                             validators={['required', 'isEmail']}\n    //                             errorMessages={['This field is required', 'Invalid email']}\n    //                         />\n    //                         </Grid>\n    //                         <Grid item xs={12}>\n    //                         <TextValidator variant=\"outlined\" fullWidth\n    //                             label=\"Subject *\"\n    //                             onChange={onChangeSubject}\n    //                             name=\"subject\"\n    //                             value={subject}\n    //                             validators={['required']}\n    //                             errorMessages={['This field is required']}\n    //                         />\n    //                         </Grid>\n    //                         <Grid item xs={12}>\n    //                             <TextValidator variant=\"outlined\" fullWidth multiline rows={5}\n    //                                 label=\"Message *\"\n    //                                 onChange={onChangeMessage}\n    //                                 name=\"message\"\n    //                                 value={message}\n    //                                 validators={['required']}\n    //                                 errorMessages={['This field is required']}\n    //                             />\n    //                         </Grid>\n    //                     </Grid>\n    //                     <Box my={2}>\n    //                         <Button className={classes.button} type=\"submit\" fullWidth variant=\"contained\">Submit</Button>\n    //                     </Box>\n    //                 </ValidatorForm>\n    //             </Box>\n    //         </Box>\n    //     </Container>\n    // </section>\n    React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      pt: 8,\n      pb: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      mb: 6,\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      component: \"h2\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, \"Contact the Pied Piper team\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      paragraph: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, \"We're here to answer your questions and discuss the decentralized future of the internet. Let's talk!\")), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      autoComplete: \"fname\",\n      name: \"firstName\",\n      id: \"firstName\",\n      label: \"First name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"lastName\",\n      id: \"lastName\",\n      label: \"Last name\",\n      autoComplete: \"lname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"email\",\n      id: \"email\",\n      label: \"Email address\",\n      autoComplete: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      multiline: true,\n      rows: 5,\n      fullWidth: true,\n      autoComplete: \"message\",\n      name: \"message\",\n      id: \"message\",\n      label: \"Message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Box, {\n      my: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, \"Submit\")))))))\n  );\n}","map":{"version":3,"sources":["/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/ContactForm.js"],"names":["React","useState","Container","Box","Typography","Grid","Button","Paper","makeStyles","Mail","LinkedIn","ValidatorForm","TextValidator","useStyles","theme","root","display","justifyContent","flexWrap","margin","spacing","width","height","button","color","palette","text","black","backgroundColor","background","white","App","classes","firstName","setFirstName","lastName","setLastName","email","setEmail","subject","setSubject","message","setMessage","onChangeFirstName","event","target","value","onChangeLastName","onChangeEmail","onChangeSubject","onChangeMessage"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\n// import MediaQuery from 'react-responsive';\nimport { Container, Box, Typography, Grid, Button, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Mail, LinkedIn } from '@material-ui/icons';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(1),\n            width: theme.spacing(12),\n            height: theme.spacing(12),\n        },\n    },\n    button: {\n        color: theme.palette.text.black, \n        backgroundColor: theme.palette.background.white, \n        height: \"50px\"\n    }\n}));\n\nexport default function App() {\n\n    const classes = useStyles();\n\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [subject, setSubject] = useState('');\n    const [message, setMessage] = useState('');\n  \n    const onChangeFirstName = (event) => {\n      setFirstName(event.target.value);\n    }\n    const onChangeLastName = (event) => {\n      setLastName(event.target.value);\n    }\n    const onChangeEmail = (event) => {\n      setEmail(event.target.value);\n    }\n    const onChangeSubject= (event) => {\n        setSubject(event.target.value);\n    }\n    const onChangeMessage = (event) => {\n        setMessage(event.target.value);\n    }\n\n    return (\n\n        // <section>\n        //     <Container maxWidth=\"xs\">\n        //         <Box pt={8} pb={10}>\n        //             <Box mb={6} textAlign=\"center\">\n        //                 <Typography variant=\"h4\" component=\"h2\" gutterBottom={true}>CONTACT</Typography>\n        //                 <hr width=\"60px\" />\n        //                 <Typography variant=\"subtitle1\" color=\"textSecondary\" paragraph={true}>We're here to answer your questions and discuss the decentralized future of the internet. Let's talk!</Typography>\n        //                 <div className={classes.root}>\n        //                     <Paper elevation={3}>\n        //                         <Button aria-label=\"LinkedIn\" style={{ width: \"100%\", height: \"100%\" }} onClick={() => window.open(\"https://www.linkedin.com/in/hollandaucoin/\", \"_blank\")}>\n        //                             <LinkedIn style={{ fontSize: 80, fill: \"linear-gradient(140deg, #F3B0F2 5%, #DF63D3 15%, #8C53CC 50%, #0A8DC8 75%, #51E2EB 100%)\" }} />\n        //                         </Button>\n        //                     </Paper>\n        //                     <Paper elevation={3}>\n        //                         <Button style={{ width: \"100%\", height: \"100%\" }} aria-label=\"Mail\" key=\"Email\" component=\"a\" href=\"mailto:holland.aucoin2@gmail.com\">\n        //                             <Mail style={{ fontSize: 80 }} />\n        //                         </Button>\n        //                     </Paper>\n        //                     <Paper elevation={3}>\n        //                         <Button aria-label=\"LinkedIn\" style={{ width: \"100%\", height: \"100%\" }} onClick={() => window.open(\"https://www.linkedin.com/in/hollandaucoin/\", \"_blank\")}>\n        //                             <LinkedIn style={{ fontSize: 80 }} />\n        //                         </Button>\n        //                     </Paper>\n        //                 </div>\n        //             </Box>\n        //             <Box>\n        //                 <ValidatorForm onError={errors => console.log(errors)}>\n        //                     <Grid container spacing={2}>\n        //                         <Grid item xs={12} sm={6}>\n        //                         <TextValidator variant=\"outlined\" fullWidth\n        //                             label=\"First Name *\"\n        //                             onChange={onChangeFirstName}\n        //                             name=\"firstName\"\n        //                             value={firstName}\n        //                             validators={['required', 'matchRegexp:^[a-zA-Z]+$', 'matchRegexp:^.{2,15}$']}\n        //                             errorMessages={['This field is required', 'Can only contain letters', 'Must be 2 to 15 characters']}\n        //                         />\n        //                         </Grid>\n        //                         <Grid item xs={12} sm={6}>\n        //                             <TextValidator variant=\"outlined\" fullWidth\n        //                                 label=\"Last Name *\"\n        //                                 onChange={onChangeLastName}\n        //                                 name=\"lastName\"\n        //                                 value={lastName}\n        //                                 validators={['required', 'matchRegexp:^[a-zA-Z]+$', 'matchRegexp:^.{2,15}$']}\n        //                                 errorMessages={['This field is required', 'Can only contain letters', 'Must be 2 to 15 characters']}\n        //                             />\n        //                         </Grid>\n        //                         <Grid item xs={12}>\n        //                         <TextValidator variant=\"outlined\" fullWidth\n        //                             label=\"Email *\"\n        //                             onChange={onChangeEmail}\n        //                             name=\"email\"\n        //                             value={email}\n        //                             validators={['required', 'isEmail']}\n        //                             errorMessages={['This field is required', 'Invalid email']}\n        //                         />\n        //                         </Grid>\n        //                         <Grid item xs={12}>\n        //                         <TextValidator variant=\"outlined\" fullWidth\n        //                             label=\"Subject *\"\n        //                             onChange={onChangeSubject}\n        //                             name=\"subject\"\n        //                             value={subject}\n        //                             validators={['required']}\n        //                             errorMessages={['This field is required']}\n        //                         />\n        //                         </Grid>\n        //                         <Grid item xs={12}>\n        //                             <TextValidator variant=\"outlined\" fullWidth multiline rows={5}\n        //                                 label=\"Message *\"\n        //                                 onChange={onChangeMessage}\n        //                                 name=\"message\"\n        //                                 value={message}\n        //                                 validators={['required']}\n        //                                 errorMessages={['This field is required']}\n        //                             />\n        //                         </Grid>\n        //                     </Grid>\n        //                     <Box my={2}>\n        //                         <Button className={classes.button} type=\"submit\" fullWidth variant=\"contained\">Submit</Button>\n        //                     </Box>\n        //                 </ValidatorForm>\n        //             </Box>\n        //         </Box>\n        //     </Container>\n        // </section>\n\n\n        <section>\n  <Container maxWidth=\"sm\">\n    <Box pt={8} pb={10}>\n      <Box mb={6} textAlign=\"center\">\n        <Typography variant=\"h4\" component=\"h2\" gutterBottom={true}>Contact the Pied Piper team</Typography>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\" paragraph={true}>We're here to answer your questions and discuss the decentralized future of the internet. Let's talk!</Typography>\n      </Box>\n      <Box>\n        <form noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField variant=\"outlined\" required fullWidth autoComplete=\"fname\" name=\"firstName\" id=\"firstName\" label=\"First name\" />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField variant=\"outlined\" required fullWidth name=\"lastName\" id=\"lastName\" label=\"Last name\" autoComplete=\"lname\" />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField variant=\"outlined\" required fullWidth name=\"email\" id=\"email\" label=\"Email address\" autoComplete=\"email\" />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField variant=\"outlined\" required multiline rows={5} fullWidth autoComplete=\"message\" name=\"message\" id=\"message\" label=\"Message\" />\n            </Grid>\n          </Grid>\n          <Box my={2}>\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\n              Submit\n            </Button>\n          </Box>\n        </form>\n      </Box>\n    </Box>\n  </Container>\n</section>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}