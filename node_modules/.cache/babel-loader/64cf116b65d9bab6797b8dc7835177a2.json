{"ast":null,"code":"var _jsxFileName = \"/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/EducationSkills.js\";\nimport React, { useEffect } from 'react';\nimport { Container, Box, Typography, Grid, Paper } from '@material-ui/core';\nimport service from '../services/SkillService';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Code, Laptop, Build, Timeline, Web, ViewColumn, Dns, Cloud, Storage, Layers } from '@material-ui/icons';\nimport theme from '../theme/theme';\n/**\n * MyPortfolio\n * @Author Holland Aucoin\n * \n * Education Skills\n * @Summary This component displays skills gained within the education page\n */\n\nconst useStyles = makeStyles(() => ({\n  icon: {\n    marginBottom: theme.spacing(1)\n  }\n}));\nexport default function App() {\n  // Creating variables of skill lists to be filled be appropriate service call\n  const [languageSkills, setLanguages] = React.useState([]);\n  const [IDESkills, setIDEs] = React.useState([]);\n  const [toolSkills, setTools] = React.useState([]);\n  const [SDSkills, setSD] = React.useState([]);\n  const [frameworkSkills, setFrameworks] = React.useState([]);\n  const [DPSkills, setDP] = React.useState([]);\n  const [agileSkills, setAgile] = React.useState([]);\n  const [serverSkills, setServers] = React.useState([]);\n  const [cloudSkills, setClouds] = React.useState([]);\n  const [databaseSkills, setDatabases] = React.useState([]); // Use useEffect method to call backend for each skill type and wait for response\n\n  useEffect(() => {\n    service.getSkillsByType(\"Languages\").then(response => {\n      setLanguages(response.data);\n    });\n    service.getSkillsByType(\"IDE\").then(response => {\n      setIDEs(response.data);\n    });\n    service.getSkillsByType(\"Tools\").then(response => {\n      setTools(response.data);\n    });\n    service.getSkillsByType(\"Software Design\").then(response => {\n      setSD(response.data);\n    });\n    service.getSkillsByType(\"Web Frameworks\").then(response => {\n      setFrameworks(response.data);\n    });\n    service.getSkillsByType(\"Design Patterns\").then(response => {\n      setDP(response.data);\n    });\n    service.getSkillsByType(\"Agile Scrum\").then(response => {\n      setAgile(response.data);\n    });\n    service.getSkillsByType(\"Application Servers\").then(response => {\n      setServers(response.data);\n    });\n    service.getSkillsByType(\"Cloud Services\").then(response => {\n      setClouds(response.data);\n    });\n    service.getSkillsByType(\"Databases\").then(response => {\n      setDatabases(response.data);\n    });\n  }, []); // Iterate through an array of technologies and turn it into string\n\n  function arrayToString(skillsArray) {\n    let string = \"\";\n    skillsArray.map((skill, index) => string += skill.name + (index < skillsArray.length - 1 ? ' â€¢\\u00A0' : ' '));\n    return string;\n  } // Set strings for each type of skill by calling method\n\n\n  let languages = arrayToString(languageSkills);\n  let IDEs = arrayToString(IDESkills);\n  let tools = arrayToString(toolSkills);\n  let SDs = arrayToString(SDSkills);\n  let frameworks = arrayToString(frameworkSkills);\n  let DPs = arrayToString(DPSkills);\n  let agiles = arrayToString(agileSkills);\n  let servers = arrayToString(serverSkills);\n  let clouds = arrayToString(cloudSkills);\n  let databases = arrayToString(databaseSkills);\n  const classes = useStyles(); // Create arrays for the strings of skills, titles, and icons to iterate over and show in boxes\n\n  let skills = [languages, frameworks, servers, IDEs, tools, DPs, SDs, agiles, clouds, databases];\n  let titles = [\"Languages\", \"Web Frameworks\", \"Application Servers\", \"IDEs\", \"Tools\", \"Design Patterns\", \"Software Design\", \"Agile Scrum\", \"Cloud Services\", \"Databases\"];\n  let icons = [/*#__PURE__*/React.createElement(Code, {\n    fontSize: \"large\",\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Web, {\n    fontSize: \"large\",\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Dns, {\n    fontSize: \"large\",\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Laptop, {\n    fontSize: \"large\",\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Build, {\n    fontSize: \"large\",\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Layers, {\n    fontSize: \"large\",\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ViewColumn, {\n    fontSize: \"large\",\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Timeline, {\n    fontSize: \"large\",\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Cloud, {\n    fontSize: \"large\",\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Storage, {\n    fontSize: \"large\",\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  })];\n  return /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    py: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    align: \"center\",\n    style: {\n      paddingBottom: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"Skills & Expertise\"), /*#__PURE__*/React.createElement(\"hr\", {\n    width: \"100px\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, skills.map((skill, id) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, icons[id], /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h3\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, titles[id]), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, skill))))))));\n}","map":{"version":3,"sources":["/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/EducationSkills.js"],"names":["React","useEffect","Container","Box","Typography","Grid","Paper","service","makeStyles","Code","Laptop","Build","Timeline","Web","ViewColumn","Dns","Cloud","Storage","Layers","theme","useStyles","icon","marginBottom","spacing","App","languageSkills","setLanguages","useState","IDESkills","setIDEs","toolSkills","setTools","SDSkills","setSD","frameworkSkills","setFrameworks","DPSkills","setDP","agileSkills","setAgile","serverSkills","setServers","cloudSkills","setClouds","databaseSkills","setDatabases","getSkillsByType","then","response","data","arrayToString","skillsArray","string","map","skill","index","name","length","languages","IDEs","tools","SDs","frameworks","DPs","agiles","servers","clouds","databases","classes","skills","titles","icons","paddingBottom","id","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Container, Box, Typography, Grid, Paper } from '@material-ui/core';\nimport service from '../services/SkillService';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Code, Laptop, Build, Timeline, Web, ViewColumn, Dns, Cloud, Storage, Layers } from '@material-ui/icons';\nimport theme from '../theme/theme';\n\n/**\n * MyPortfolio\n * @Author Holland Aucoin\n * \n * Education Skills\n * @Summary This component displays skills gained within the education page\n */\n\nconst useStyles = makeStyles(() => ({\n  icon: {\n    marginBottom: theme.spacing(1),\n  }\n}));\n\nexport default function App() {\n\n  // Creating variables of skill lists to be filled be appropriate service call\n  const [languageSkills, setLanguages] = React.useState([]);\n  const [IDESkills, setIDEs] = React.useState([]);\n  const [toolSkills, setTools] = React.useState([]);\n  const [SDSkills, setSD] = React.useState([]);\n  const [frameworkSkills, setFrameworks] = React.useState([]);\n  const [DPSkills, setDP] = React.useState([]);\n  const [agileSkills, setAgile] = React.useState([]);\n  const [serverSkills, setServers] = React.useState([]);\n  const [cloudSkills, setClouds] = React.useState([]);\n  const [databaseSkills, setDatabases] = React.useState([]);\n\n  // Use useEffect method to call backend for each skill type and wait for response\n  useEffect(() => {\n    service.getSkillsByType(\"Languages\").then(response => {\n      setLanguages(response.data);\n    })\n    service.getSkillsByType(\"IDE\").then(response => {\n      setIDEs(response.data);\n    })\n    service.getSkillsByType(\"Tools\").then(response => {\n      setTools(response.data);\n    })\n    service.getSkillsByType(\"Software Design\").then(response => {\n      setSD(response.data);\n    })\n    service.getSkillsByType(\"Web Frameworks\").then(response => {\n      setFrameworks(response.data);\n    })\n    service.getSkillsByType(\"Design Patterns\").then(response => {\n      setDP(response.data);\n    })\n    service.getSkillsByType(\"Agile Scrum\").then(response => {\n      setAgile(response.data);\n    })\n    service.getSkillsByType(\"Application Servers\").then(response => {\n      setServers(response.data);\n    })\n    service.getSkillsByType(\"Cloud Services\").then(response => {\n      setClouds(response.data);\n    })\n    service.getSkillsByType(\"Databases\").then(response => {\n      setDatabases(response.data);\n    })\n  }, []);\n\n  // Iterate through an array of technologies and turn it into string\n  function arrayToString(skillsArray) {\n    let string = \"\";\n\n    skillsArray.map((skill, index) => (\n      string += skill.name + (index < skillsArray.length - 1 ? ' â€¢\\u00A0' : ' ')\n    ))\n\n    return string;\n  }\n\n  // Set strings for each type of skill by calling method\n  let languages = arrayToString(languageSkills);\n  let IDEs = arrayToString(IDESkills);\n  let tools = arrayToString(toolSkills);\n  let SDs = arrayToString(SDSkills);\n  let frameworks = arrayToString(frameworkSkills);\n  let DPs = arrayToString(DPSkills);\n  let agiles = arrayToString(agileSkills);\n  let servers = arrayToString(serverSkills);\n  let clouds = arrayToString(cloudSkills);\n  let databases = arrayToString(databaseSkills);\n\n  const classes = useStyles();\n\n  // Create arrays for the strings of skills, titles, and icons to iterate over and show in boxes\n  let skills = [languages, frameworks, servers, IDEs, tools, DPs, SDs, agiles, clouds, databases];\n  let titles = [\"Languages\", \"Web Frameworks\", \"Application Servers\", \"IDEs\", \"Tools\", \"Design Patterns\", \"Software Design\", \"Agile Scrum\", \"Cloud Services\", \"Databases\"];\n  let icons = [\n    <Code fontSize=\"large\" className={classes.icon} />,\n    <Web fontSize=\"large\" className={classes.icon} />,\n    <Dns fontSize=\"large\" className={classes.icon} />,\n    <Laptop fontSize=\"large\" className={classes.icon} />,\n    <Build fontSize=\"large\" className={classes.icon} />,\n    <Layers fontSize=\"large\" className={classes.icon} />,\n    <ViewColumn fontSize=\"large\" className={classes.icon} />,\n    <Timeline fontSize=\"large\" className={classes.icon} />,\n    <Cloud fontSize=\"large\" className={classes.icon} />,\n    <Storage fontSize=\"large\" className={classes.icon} />,\n  ]\n\n  return (\n\n    <Paper>\n      <section>\n        <Container maxWidth=\"md\" >\n          <Box py={6}>\n            <div align=\"center\" style={{paddingBottom: \"25px\"}}>\n              <Typography variant=\"h5\" gutterBottom={true}>Skills & Expertise</Typography>\n              <hr width=\"100px\" align=\"center\"/>\n            </div>\n            <Grid container spacing={4}>\n              {/* Iterate through the skills using map, and use index variable to display each icon and title */}\n              {skills.map((skill, id) => (\n                  <Grid item xs={12} sm={6} md={4} style={{textAlign: \"center\"}}>\n                    {icons[id]}\n                    <Typography variant=\"h6\" component=\"h3\" gutterBottom={true}>{titles[id]}</Typography>\n                    <Typography variant=\"body1\" component=\"p\">{skill}</Typography>\n                  </Grid>\n                ))\n              }\n            </Grid>\n          </Box>\n        </Container>\n      </section>\n    </Paper>\n  )\n}"]},"metadata":{},"sourceType":"module"}