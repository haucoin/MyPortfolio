{"ast":null,"code":"var _jsxFileName = \"/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/ContactForm.js\";\nimport React, { useState } from 'react';\nimport { Container, Box, Typography, Grid, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport theme from '../theme/theme';\nimport me from '../images/ContactMe.jpg';\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(10),\n      height: theme.spacing(10)\n    }\n  },\n  button: {\n    color: theme.palette.text.black,\n    backgroundColor: theme.palette.background.white,\n    height: \"50px\"\n  },\n  halfLg: {\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: theme.breakpoints.values['lg'] / 2\n    }\n  },\n  firstBox: {\n    [theme.breakpoints.up('lg')]: {\n      marginLeft: 'auto',\n      paddingRight: theme.spacing(6)\n    }\n  },\n  fullHeightImage: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    objectFit: 'cover',\n    height: 768,\n    width: '100%'\n  }\n}));\nexport default function App() {\n  const classes = useStyles();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [subject, setSubject] = useState('');\n  const [message, setMessage] = useState('');\n\n  const onChangeFirstName = event => {\n    setFirstName(event.target.value);\n  };\n\n  const onChangeLastName = event => {\n    setLastName(event.target.value);\n  };\n\n  const onChangeEmail = event => {\n    setEmail(event.target.value);\n  };\n\n  const onChangeSubject = event => {\n    setSubject(event.target.value);\n  };\n\n  const onChangeMessage = event => {\n    setMessage(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    pt: 10,\n    pb: 8,\n    display: \"flex\",\n    className: [classes.halfLg, classes.firstBox],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mb: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"Let's get connected.\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    paragraph: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"Determined and passionate software developer \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 133\n    }\n  }, \"actively seeking new opportunities\"), \" and would love to hear from you.\")), /*#__PURE__*/React.createElement(ValidatorForm, {\n    onError: errors => console.log(errors),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    variant: \"outlined\",\n    fullWidth: true,\n    label: \"First Name *\",\n    onChange: onChangeFirstName,\n    name: \"firstName\",\n    value: firstName,\n    validators: ['required', 'matchRegexp:^[a-zA-Z]+$', 'matchRegexp:^.{2,15}$'],\n    errorMessages: ['This field is required', 'Can only contain letters', 'Must be 2 to 15 characters'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    variant: \"outlined\",\n    fullWidth: true,\n    label: \"Last Name *\",\n    onChange: onChangeLastName,\n    name: \"lastName\",\n    value: lastName,\n    validators: ['required', 'matchRegexp:^[a-zA-Z]+$', 'matchRegexp:^.{2,15}$'],\n    errorMessages: ['This field is required', 'Can only contain letters', 'Must be 2 to 15 characters'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    variant: \"outlined\",\n    fullWidth: true,\n    label: \"Email *\",\n    onChange: onChangeEmail,\n    name: \"email\",\n    value: email,\n    validators: ['required', 'isEmail'],\n    errorMessages: ['This field is required', 'Invalid email'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    variant: \"outlined\",\n    fullWidth: true,\n    label: \"Subject *\",\n    onChange: onChangeSubject,\n    name: \"subject\",\n    value: subject,\n    validators: ['required'],\n    errorMessages: ['This field is required'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    variant: \"outlined\",\n    fullWidth: true,\n    multiline: true,\n    rows: 5,\n    label: \"Message *\",\n    onChange: onChangeMessage,\n    name: \"message\",\n    value: message,\n    validators: ['required'],\n    errorMessages: ['This field is required'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    my: 2,\n    maxWidth: \"300px\",\n    style: {\n      display: \"flex\",\n      justifyContent: 'center',\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    style: {\n      display: \"flex\",\n      justifyContent: 'center',\n      alignItems: \"center\"\n    },\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, \"SUBMIT\")))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    position: \"relative\",\n    height: 768,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.fullHeightImage,\n    src: me,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  })))));\n} // linear-gradient(140deg, #F3B0F2 5%, #DF63D3 15%, #8C53CC 50%, #0A8DC8 75%, #51E2EB 100%)\"","map":{"version":3,"sources":["/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/ContactForm.js"],"names":["React","useState","Container","Box","Typography","Grid","Button","makeStyles","ValidatorForm","TextValidator","theme","me","useStyles","root","display","justifyContent","flexWrap","margin","spacing","width","height","button","color","palette","text","black","backgroundColor","background","white","halfLg","breakpoints","up","maxWidth","values","firstBox","marginLeft","paddingRight","fullHeightImage","position","top","left","right","bottom","objectFit","App","classes","firstName","setFirstName","lastName","setLastName","email","setEmail","subject","setSubject","message","setMessage","onChangeFirstName","event","target","value","onChangeLastName","onChangeEmail","onChangeSubject","onChangeMessage","errors","console","log","textAlign","alignItems"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Container, Box, Typography, Grid, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport theme from '../theme/theme';\n\nimport me from '../images/ContactMe.jpg';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(10),\n      height: theme.spacing(10),\n    },\n  },\n  button: {\n    color: theme.palette.text.black,\n    backgroundColor: theme.palette.background.white,\n    height: \"50px\",\n  },\n  halfLg: {\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: theme.breakpoints.values['lg'] / 2\n    }\n  },\n  firstBox: {\n    [theme.breakpoints.up('lg')]: {\n      marginLeft: 'auto',\n      paddingRight: theme.spacing(6)\n    }\n  },\n  fullHeightImage: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    objectFit: 'cover',\n    height: 768,\n    width: '100%'\n  },\n}));\n\nexport default function App() {\n\n  const classes = useStyles();\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [subject, setSubject] = useState('');\n  const [message, setMessage] = useState('');\n\n  const onChangeFirstName = (event) => {\n    setFirstName(event.target.value);\n  }\n  const onChangeLastName = (event) => {\n    setLastName(event.target.value);\n  }\n  const onChangeEmail = (event) => {\n    setEmail(event.target.value);\n  }\n  const onChangeSubject = (event) => {\n    setSubject(event.target.value);\n  }\n  const onChangeMessage = (event) => {\n    setMessage(event.target.value);\n  }\n\n  return (\n\n    <section>\n      <Grid container>\n        <Grid item xs={12} md={6}>\n          <Box pt={10} pb={8} display=\"flex\" className={[classes.halfLg, classes.firstBox]}>\n            <Container>\n              <Box mb={4}>\n                <Typography variant=\"h4\" component=\"h2\" gutterBottom={true}>Let's get connected.</Typography>\n                <Typography variant=\"subtitle1\" color=\"textSecondary\" paragraph={true}>Determined and passionate software developer <b>actively seeking new opportunities</b> and would love to hear from you.</Typography>\n              </Box>\n\n              <ValidatorForm onError={errors => console.log(errors)}>\n                <Grid container spacing={2} style={{textAlign: \"center\"}}>\n                  <Grid item xs={12} sm={6}>\n                    <TextValidator variant=\"outlined\" fullWidth\n                      label=\"First Name *\"\n                      onChange={onChangeFirstName}\n                      name=\"firstName\"\n                      value={firstName}\n                      validators={['required', 'matchRegexp:^[a-zA-Z]+$', 'matchRegexp:^.{2,15}$']}\n                      errorMessages={['This field is required', 'Can only contain letters', 'Must be 2 to 15 characters']}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextValidator variant=\"outlined\" fullWidth\n                      label=\"Last Name *\"\n                      onChange={onChangeLastName}\n                      name=\"lastName\"\n                      value={lastName}\n                      validators={['required', 'matchRegexp:^[a-zA-Z]+$', 'matchRegexp:^.{2,15}$']}\n                      errorMessages={['This field is required', 'Can only contain letters', 'Must be 2 to 15 characters']}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextValidator variant=\"outlined\" fullWidth\n                      label=\"Email *\"\n                      onChange={onChangeEmail}\n                      name=\"email\"\n                      value={email}\n                      validators={['required', 'isEmail']}\n                      errorMessages={['This field is required', 'Invalid email']}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextValidator variant=\"outlined\" fullWidth\n                      label=\"Subject *\"\n                      onChange={onChangeSubject}\n                      name=\"subject\"\n                      value={subject}\n                      validators={['required']}\n                      errorMessages={['This field is required']}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextValidator variant=\"outlined\" fullWidth multiline rows={5}\n                      label=\"Message *\"\n                      onChange={onChangeMessage}\n                      name=\"message\"\n                      value={message}\n                      validators={['required']}\n                      errorMessages={['This field is required']}\n                    />\n                  </Grid>\n                </Grid>\n                <Box my={2} maxWidth=\"300px\" style={{display: \"flex\", justifyContent: 'center', alignItems:\"center\"}}>\n                  <Button className={classes.button}  style={{display: \"flex\", justifyContent: 'center', alignItems:\"center\"}} type=\"submit\" fullWidth variant=\"contained\">SUBMIT</Button>\n                </Box>\n              </ValidatorForm>\n            </Container>\n          </Box>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Box position=\"relative\" height={768}>\n            <img className={classes.fullHeightImage} src={me} alt=\"\" />\n          </Box>\n        </Grid>\n      </Grid>\n    </section>\n\n  )\n}\n\n// linear-gradient(140deg, #F3B0F2 5%, #DF63D3 15%, #8C53CC 50%, #0A8DC8 75%, #51E2EB 100%)\""]},"metadata":{},"sourceType":"module"}