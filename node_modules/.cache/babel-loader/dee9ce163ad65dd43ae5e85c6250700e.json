{"ast":null,"code":"var _jsxFileName = \"/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/ContactForm.js\";\nimport React, { useState } from 'react'; // import MediaQuery from 'react-responsive';\n\nimport { Container, Box, Typography, Grid, Button, Paper, Fade } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Mail, LinkedIn, Phone } from '@material-ui/icons';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport theme from '../theme/theme';\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(10),\n      height: theme.spacing(10)\n    }\n  },\n  button: {\n    color: theme.palette.text.black,\n    backgroundColor: theme.palette.background.white,\n    height: \"50px\"\n  },\n  halfLg: {\n    [theme.breakpoints.up('iPadPro')]: {\n      maxWidth: theme.breakpoints.values['iPadPro'] / 2\n    }\n  },\n  firstBox: {\n    [theme.breakpoints.down('iPadPro')]: {\n      margin: 'auto'\n    }\n  },\n  secondBox: {\n    [theme.breakpoints.up('iPadPro')]: {\n      paddingLeft: theme.spacing(6)\n    }\n  },\n  fullHeightImage: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    objectFit: 'cover',\n    height: 768,\n    width: '100%'\n  }\n}));\nexport default function App() {\n  const classes = useStyles();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [subject, setSubject] = useState('');\n  const [message, setMessage] = useState('');\n\n  const onChangeFirstName = event => {\n    setFirstName(event.target.value);\n  };\n\n  const onChangeLastName = event => {\n    setLastName(event.target.value);\n  };\n\n  const onChangeEmail = event => {\n    setEmail(event.target.value);\n  };\n\n  const onChangeSubject = event => {\n    setSubject(event.target.value);\n  };\n\n  const onChangeMessage = event => {\n    setMessage(event.target.value);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <section>\n    //     <Container style={{ maxWidth: \"600px\", paddingLeft: \"24px\", paddingRight: \"24px\"}}>\n    //         <Box pt={8} pb={10}>\n    //             <Box mb={6} textAlign=\"center\">\n    //                 {/* <Fade in={true}> */}\n    //                 <Typography variant=\"h4\" component=\"h2\" gutterBottom={true}>CONTACT</Typography>\n    //                 <hr width=\"60px\" />\n    //                 <Typography variant=\"subtitle1\" color=\"textSecondary\" paragraph={true}>We're here to answer your questions and discuss the decentralized future of the internet. Let's talk!</Typography>\n    //                 {/* </Fade> */}\n    //                 {/* <div className={classes.root}>\n    //                     <Paper elevation={3}>\n    //                         <Button aria-label=\"Phone\" style={{ width: \"100%\", height: \"100%\" }} onClick={() => window.open(\"https://www.linkedin.com/in/hollandaucoin/\", \"_blank\")}>\n    //                             <Phone style={{ fontSize: 70, color: theme.palette.pink.main }} />\n    //                         </Button>\n    //                     </Paper>\n    //                     <Paper elevation={3}>\n    //                         <Button style={{ width: \"100%\", height: \"100%\" }} aria-label=\"Mail\" key=\"Email\" component=\"a\" href=\"mailto:holland.aucoin2@gmail.com\">\n    //                             <Mail style={{ fontSize: 70, color: theme.palette.purple.main }} />\n    //                         </Button>\n    //                     </Paper>\n    //                     <Paper elevation={3}>\n    //                         <Button aria-label=\"LinkedIn\" style={{ width: \"100%\", height: \"100%\" }} onClick={() => window.open(\"https://www.linkedin.com/in/hollandaucoin/\", \"_blank\")}>\n    //                             <LinkedIn style={{ fontSize: 70, color: theme.palette.blue.main }} />\n    //                         </Button>\n    //                     </Paper>\n    //                 </div> */}\n    //             </Box>\n    //             <Box>\n    //                 <ValidatorForm onError={errors => console.log(errors)}>\n    //                     <Grid container spacing={2}>\n    //                         <Grid item xs={12} sm={6}>\n    //                         <TextValidator variant=\"outlined\" fullWidth\n    //                             label=\"First Name *\"\n    //                             onChange={onChangeFirstName}\n    //                             name=\"firstName\"\n    //                             value={firstName}\n    //                             validators={['required', 'matchRegexp:^[a-zA-Z]+$', 'matchRegexp:^.{2,15}$']}\n    //                             errorMessages={['This field is required', 'Can only contain letters', 'Must be 2 to 15 characters']}\n    //                         />\n    //                         </Grid>\n    //                         <Grid item xs={12} sm={6}>\n    //                             <TextValidator variant=\"outlined\" fullWidth\n    //                                 label=\"Last Name *\"\n    //                                 onChange={onChangeLastName}\n    //                                 name=\"lastName\"\n    //                                 value={lastName}\n    //                                 validators={['required', 'matchRegexp:^[a-zA-Z]+$', 'matchRegexp:^.{2,15}$']}\n    //                                 errorMessages={['This field is required', 'Can only contain letters', 'Must be 2 to 15 characters']}\n    //                             />\n    //                         </Grid>\n    //                         <Grid item xs={12}>\n    //                         <TextValidator variant=\"outlined\" fullWidth\n    //                             label=\"Email *\"\n    //                             onChange={onChangeEmail}\n    //                             name=\"email\"\n    //                             value={email}\n    //                             validators={['required', 'isEmail']}\n    //                             errorMessages={['This field is required', 'Invalid email']}\n    //                         />\n    //                         </Grid>\n    //                         <Grid item xs={12}>\n    //                         <TextValidator variant=\"outlined\" fullWidth\n    //                             label=\"Subject *\"\n    //                             onChange={onChangeSubject}\n    //                             name=\"subject\"\n    //                             value={subject}\n    //                             validators={['required']}\n    //                             errorMessages={['This field is required']}\n    //                         />\n    //                         </Grid>\n    //                         <Grid item xs={12}>\n    //                             <TextValidator variant=\"outlined\" fullWidth multiline rows={5}\n    //                                 label=\"Message *\"\n    //                                 onChange={onChangeMessage}\n    //                                 name=\"message\"\n    //                                 value={message}\n    //                                 validators={['required']}\n    //                                 errorMessages={['This field is required']}\n    //                             />\n    //                         </Grid>\n    //                     </Grid>\n    //                     <Box my={2}>\n    //                         <Button className={classes.button} type=\"submit\" fullWidth variant=\"contained\">SUBMIT</Button>\n    //                     </Box>\n    //                 </ValidatorForm>\n    //             </Box>\n    //         </Box>\n    //     </Container>\n    // </section>\n    React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      pt: 10,\n      pb: 8,\n      display: \"flex\",\n      className: [classes.halfLg, classes.firstBox],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      mb: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      component: \"h2\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 19\n      }\n    }, \"Let's talk about the future\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      paragraph: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }, \"We're here to answer your questions and discuss the decentralized future of the internet.\")), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      mt: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }, \"Submit\")))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      position: \"relative\",\n      height: 768,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: classes.fullHeightImage,\n      src: \"https://images.unsplash.com/photo-1485217988980-11786ced9454?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    })))))\n  );\n} // linear-gradient(140deg, #F3B0F2 5%, #DF63D3 15%, #8C53CC 50%, #0A8DC8 75%, #51E2EB 100%)\"","map":{"version":3,"sources":["/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/ContactForm.js"],"names":["React","useState","Container","Box","Typography","Grid","Button","Paper","Fade","makeStyles","Mail","LinkedIn","Phone","ValidatorForm","TextValidator","theme","useStyles","root","display","justifyContent","flexWrap","margin","spacing","width","height","button","color","palette","text","black","backgroundColor","background","white","halfLg","breakpoints","up","maxWidth","values","firstBox","down","secondBox","paddingLeft","fullHeightImage","position","top","left","right","bottom","objectFit","App","classes","firstName","setFirstName","lastName","setLastName","email","setEmail","subject","setSubject","message","setMessage","onChangeFirstName","event","target","value","onChangeLastName","onChangeEmail","onChangeSubject","onChangeMessage"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\n// import MediaQuery from 'react-responsive';\nimport { Container, Box, Typography, Grid, Button, Paper, Fade } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Mail, LinkedIn, Phone } from '@material-ui/icons';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport theme from '../theme/theme';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(1),\n            width: theme.spacing(10),\n            height: theme.spacing(10),\n        },\n    },\n    button: {\n        color: theme.palette.text.black, \n        backgroundColor: theme.palette.background.white, \n        height: \"50px\"\n    },\n    halfLg: {\n        [theme.breakpoints.up('iPadPro')]: {\n          maxWidth: theme.breakpoints.values['iPadPro'] / 2\n        }\n      },\n      firstBox: {\n        [theme.breakpoints.down('iPadPro')]: {\n          margin: 'auto',\n        }\n      },\n      secondBox: {\n        [theme.breakpoints.up('iPadPro')]: {\n          paddingLeft: theme.spacing(6)\n        }\n      },\n      fullHeightImage: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        objectFit: 'cover',\n        height: 768,\n        width: '100%'\n      }\n}));\n\nexport default function App() {\n\n    const classes = useStyles();\n\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [subject, setSubject] = useState('');\n    const [message, setMessage] = useState('');\n  \n    const onChangeFirstName = (event) => {\n      setFirstName(event.target.value);\n    }\n    const onChangeLastName = (event) => {\n      setLastName(event.target.value);\n    }\n    const onChangeEmail = (event) => {\n      setEmail(event.target.value);\n    }\n    const onChangeSubject= (event) => {\n        setSubject(event.target.value);\n    }\n    const onChangeMessage = (event) => {\n        setMessage(event.target.value);\n    }\n\n    return (\n\n        // <section>\n        //     <Container style={{ maxWidth: \"600px\", paddingLeft: \"24px\", paddingRight: \"24px\"}}>\n        //         <Box pt={8} pb={10}>\n        //             <Box mb={6} textAlign=\"center\">\n        //                 {/* <Fade in={true}> */}\n        //                 <Typography variant=\"h4\" component=\"h2\" gutterBottom={true}>CONTACT</Typography>\n        //                 <hr width=\"60px\" />\n        //                 <Typography variant=\"subtitle1\" color=\"textSecondary\" paragraph={true}>We're here to answer your questions and discuss the decentralized future of the internet. Let's talk!</Typography>\n        //                 {/* </Fade> */}\n        //                 {/* <div className={classes.root}>\n        //                     <Paper elevation={3}>\n        //                         <Button aria-label=\"Phone\" style={{ width: \"100%\", height: \"100%\" }} onClick={() => window.open(\"https://www.linkedin.com/in/hollandaucoin/\", \"_blank\")}>\n        //                             <Phone style={{ fontSize: 70, color: theme.palette.pink.main }} />\n        //                         </Button>\n        //                     </Paper>\n        //                     <Paper elevation={3}>\n        //                         <Button style={{ width: \"100%\", height: \"100%\" }} aria-label=\"Mail\" key=\"Email\" component=\"a\" href=\"mailto:holland.aucoin2@gmail.com\">\n        //                             <Mail style={{ fontSize: 70, color: theme.palette.purple.main }} />\n        //                         </Button>\n        //                     </Paper>\n        //                     <Paper elevation={3}>\n        //                         <Button aria-label=\"LinkedIn\" style={{ width: \"100%\", height: \"100%\" }} onClick={() => window.open(\"https://www.linkedin.com/in/hollandaucoin/\", \"_blank\")}>\n        //                             <LinkedIn style={{ fontSize: 70, color: theme.palette.blue.main }} />\n        //                         </Button>\n        //                     </Paper>\n        //                 </div> */}\n        //             </Box>\n        //             <Box>\n        //                 <ValidatorForm onError={errors => console.log(errors)}>\n        //                     <Grid container spacing={2}>\n        //                         <Grid item xs={12} sm={6}>\n        //                         <TextValidator variant=\"outlined\" fullWidth\n        //                             label=\"First Name *\"\n        //                             onChange={onChangeFirstName}\n        //                             name=\"firstName\"\n        //                             value={firstName}\n        //                             validators={['required', 'matchRegexp:^[a-zA-Z]+$', 'matchRegexp:^.{2,15}$']}\n        //                             errorMessages={['This field is required', 'Can only contain letters', 'Must be 2 to 15 characters']}\n        //                         />\n        //                         </Grid>\n        //                         <Grid item xs={12} sm={6}>\n        //                             <TextValidator variant=\"outlined\" fullWidth\n        //                                 label=\"Last Name *\"\n        //                                 onChange={onChangeLastName}\n        //                                 name=\"lastName\"\n        //                                 value={lastName}\n        //                                 validators={['required', 'matchRegexp:^[a-zA-Z]+$', 'matchRegexp:^.{2,15}$']}\n        //                                 errorMessages={['This field is required', 'Can only contain letters', 'Must be 2 to 15 characters']}\n        //                             />\n        //                         </Grid>\n        //                         <Grid item xs={12}>\n        //                         <TextValidator variant=\"outlined\" fullWidth\n        //                             label=\"Email *\"\n        //                             onChange={onChangeEmail}\n        //                             name=\"email\"\n        //                             value={email}\n        //                             validators={['required', 'isEmail']}\n        //                             errorMessages={['This field is required', 'Invalid email']}\n        //                         />\n        //                         </Grid>\n        //                         <Grid item xs={12}>\n        //                         <TextValidator variant=\"outlined\" fullWidth\n        //                             label=\"Subject *\"\n        //                             onChange={onChangeSubject}\n        //                             name=\"subject\"\n        //                             value={subject}\n        //                             validators={['required']}\n        //                             errorMessages={['This field is required']}\n        //                         />\n        //                         </Grid>\n        //                         <Grid item xs={12}>\n        //                             <TextValidator variant=\"outlined\" fullWidth multiline rows={5}\n        //                                 label=\"Message *\"\n        //                                 onChange={onChangeMessage}\n        //                                 name=\"message\"\n        //                                 value={message}\n        //                                 validators={['required']}\n        //                                 errorMessages={['This field is required']}\n        //                             />\n        //                         </Grid>\n        //                     </Grid>\n        //                     <Box my={2}>\n        //                         <Button className={classes.button} type=\"submit\" fullWidth variant=\"contained\">SUBMIT</Button>\n        //                     </Box>\n        //                 </ValidatorForm>\n        //             </Box>\n        //         </Box>\n        //     </Container>\n        // </section>\n\n        <section>\n        <Grid container>\n          <Grid item xs={12} md={6}>\n            <Box pt={10} pb={8} display=\"flex\" className={[classes.halfLg, classes.firstBox]}>\n              <Container>\n                <Box mb={4}>\n                  <Typography variant=\"h4\" component=\"h2\" gutterBottom={true}>Let's talk about the future</Typography>\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\" paragraph={true}>We're here to answer your questions and discuss the decentralized future of the internet.</Typography>\n                </Box>\n      \n                <form noValidate>\n                  <Grid container spacing={2}>\n                    {/* <Grid item xs={12} sm={6}>\n                      <TextField variant=\"outlined\" required fullWidth autoComplete=\"fname\" name=\"firstName\" id=\"firstName\" label=\"First name\" />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <TextField variant=\"outlined\" required fullWidth name=\"lastName\" id=\"lastName\" label=\"Last name\" autoComplete=\"lname\" />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField variant=\"outlined\" required fullWidth name=\"email\" id=\"email\" label=\"Email address\" autoComplete=\"email\" />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField variant=\"outlined\" required fullWidth name=\"company\" id=\"company\" label=\"Company\" autoComplete=\"company\" />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField variant=\"outlined\" required multiline rows={5} fullWidth autoComplete=\"message\" name=\"message\" id=\"message\" label=\"Message\" />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <FormControlLabel control={<Checkbox name=\"terms\" value=\"1\" color=\"primary\" />} label=\"I agree to the terms of use and privacy policy.\" />\n                    </Grid> */}\n                  </Grid>\n                  <Box mt={2}>\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\n                      Submit\n                    </Button>\n                  </Box>\n                </form>\n              </Container>\n            </Box> \n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Box position=\"relative\" height={768}>\n              <img className={classes.fullHeightImage} src=\"https://images.unsplash.com/photo-1485217988980-11786ced9454?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"\" />\n            </Box>\n          </Grid>\n        </Grid>\n      </section>\n\n    )\n}\n\n// linear-gradient(140deg, #F3B0F2 5%, #DF63D3 15%, #8C53CC 50%, #0A8DC8 75%, #51E2EB 100%)\""]},"metadata":{},"sourceType":"module"}