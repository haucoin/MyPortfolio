{"ast":null,"code":"var _jsxFileName = \"/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/EducationCourses.js\";\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Accordion, Container, Typography, AccordionDetails, AccordionSummary } from '@material-ui/core';\nimport service from '../services/CourseService';\nimport theme from '../theme/theme';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Popup from './Popup';\n/**\n * MyPortfolio\n * @Author Holland Aucoin\n * \n * Contact Form\n * @Summary This component displays the contact form that is shown on the contact page\n */\n\nconst useStyles = makeStyles(() => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(16),\n    flexBasis: '100%',\n    flexShrink: 0\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary\n  }\n}));\nexport default function App() {\n  // Creating variables of accordion expansion and course information\n  const [expanded, setExpanded] = React.useState(false);\n  const [courses, setCourses] = React.useState([]); // Change expanded state when pressed\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  }; // Use useEffect method to call backend for course information and wait for response\n\n\n  useEffect(() => {\n    service.getCourses().then(response => {\n      setCourses(response.data);\n    });\n  }, []); // Split the list of courses in half to create 2 accordions (sided by side)\n\n  let firstCourses = courses.slice(0, courses.length / 2);\n  let secondCourses = courses.slice(courses.length / 2, courses.length);\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    align: \"center\",\n    style: {\n      paddingTop: \"35px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Courses\"), /*#__PURE__*/React.createElement(\"hr\", {\n    width: \"50px\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"md\",\n    style: {\n      paddingBottom: \"30px\",\n      paddingTop: \"20px\",\n      display: 'flex',\n      justifyContent: 'space-evenly',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, firstCourses.map(course => /*#__PURE__*/React.createElement(Accordion, {\n    key: course._id,\n    expanded: expanded === 'panel' + course._id,\n    onChange: handleChange('panel' + course._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 45\n      }\n    }),\n    \"aria-controls\": \"panelbh-content\" + course._id,\n    id: \"panelbh-header\" + course._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, course.name)), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, course.description)), (() => {\n    if (course.technology.length !== 0) {\n      let technologies = \"\";\n      course.technology.map((tech, index) => technologies += tech + (index < course.technology.length - 1 ? ',\\u00A0 ' : ' '));\n      return /*#__PURE__*/React.createElement(AccordionDetails, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        key: course,\n        variant: \"body2\",\n        color: \"textSecondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 90\n        }\n      }, \"Technologies Used:\"), \" \", technologies));\n    }\n  })(), (() => {\n    if (course.projectId != null && course.projectId !== \"\") {\n      return /*#__PURE__*/React.createElement(AccordionDetails, {\n        key: course._id,\n        style: {\n          justifyContent: \"flex-end\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        style: {\n          textDecoration: 'none',\n          paddingRight: \"25px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 23\n        }\n      }, \"View Project\"));\n    }\n  })()))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, secondCourses.map(course => /*#__PURE__*/React.createElement(Accordion, {\n    key: course._id,\n    expanded: expanded === 'panel' + course._id,\n    onChange: handleChange('panel' + course._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 45\n      }\n    }),\n    \"aria-controls\": \"panelbh-content\" + course._id,\n    id: \"panelbh-header\" + course._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, course.name)), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, course.description)), (() => {\n    if (course.technology.length !== 0) {\n      let technologies = \"\";\n      course.technology.map((tech, index) => technologies += tech + (index < course.technology.length - 1 ? ',\\u00A0 ' : ' '));\n      return /*#__PURE__*/React.createElement(AccordionDetails, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        key: course,\n        variant: \"body2\",\n        color: \"textSecondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 90\n        }\n      }, \"Technologies Used:\"), \" \", technologies));\n    }\n  })(), (() => {\n    if (course.projectId != null && course.projectId !== \"\") {\n      return /*#__PURE__*/React.createElement(AccordionDetails, {\n        key: course._id,\n        style: {\n          justifyContent: \"flex-end\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        style: {\n          textDecoration: 'none',\n          paddingRight: \"25px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 23\n        }\n      }, \"View Project\"));\n    }\n  })())))));\n}","map":{"version":3,"sources":["/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/EducationCourses.js"],"names":["React","useEffect","Link","Grid","Accordion","Container","Typography","AccordionDetails","AccordionSummary","service","theme","makeStyles","ExpandMoreIcon","Popup","useStyles","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","App","expanded","setExpanded","useState","courses","setCourses","handleChange","panel","event","isExpanded","getCourses","then","response","data","firstCourses","slice","length","secondCourses","classes","paddingTop","paddingBottom","display","justifyContent","flexWrap","map","course","_id","name","description","technology","technologies","tech","index","projectId","textDecoration","paddingRight"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Accordion, Container, Typography, AccordionDetails, AccordionSummary } from '@material-ui/core';\nimport service from '../services/CourseService';\nimport theme from '../theme/theme';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Popup from './Popup';\n\n/**\n * MyPortfolio\n * @Author Holland Aucoin\n * \n * Contact Form\n * @Summary This component displays the contact form that is shown on the contact page\n */\n\nconst useStyles = makeStyles(() => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(16),\n    flexBasis: '100%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function App() {\n\n  // Creating variables of accordion expansion and course information\n  const [expanded, setExpanded] = React.useState(false);\n  const [courses, setCourses] = React.useState([]);\n\n  // Change expanded state when pressed\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  // Use useEffect method to call backend for course information and wait for response\n  useEffect(() => {\n      service.getCourses().then(response => {\n        setCourses(response.data);\n      })\n  }, []);\n\n  // Split the list of courses in half to create 2 accordions (sided by side)\n  let firstCourses = courses.slice(0, courses.length/2);\n  let secondCourses = courses.slice(courses.length/2, courses.length);\n\n  const classes = useStyles();\n\n  return (\n\n    <section>\n    <div align=\"center\" style={{paddingTop: \"35px\"}}>\n      <Typography variant=\"h5\" gutterBottom={true}>Courses</Typography>\n      <hr width=\"50px\" align=\"center\"/>\n    </div>\n    <Container maxWidth=\"md\" style={{paddingBottom: \"30px\", paddingTop: \"20px\", display: 'flex', justifyContent: 'space-evenly', flexWrap: 'wrap',}}>\n        {/* First half of courses */}\n        <Grid item xs={12} sm={6} >\n          {/* Iterate through each course to make accordions */}\n          {firstCourses.map(course => (\n            <Accordion key={course._id} expanded={expanded === 'panel' + course._id} onChange={handleChange('panel' + course._id)}>\n              <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panelbh-content\" + course._id} id={\"panelbh-header\" + course._id} >\n                <Typography className={classes.heading}>{course.name}</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Typography variant=\"body1\" color=\"textSecondary\">{course.description}</Typography>\n              </AccordionDetails>\n                  {/* Adjust technologies array into a string with spaces and commas if the course contains technologies */}\n                  {(() => {\n                    if (course.technology.length !== 0) {\n                      let technologies = \"\";\n\n                      course.technology.map((tech, index) => (\n                        technologies += tech + (index < course.technology.length - 1 ? ',\\u00A0 ' : ' ')\n                      ))\n\n                      return (\n                        <AccordionDetails>\n                          <Typography key={course} variant=\"body2\" color=\"textSecondary\"><b>Technologies Used:</b> {technologies}</Typography>\n                        </AccordionDetails>\n                      )\n                    }\n                  })()}\n                  {/* Add button to view the associated project if the course contains a project */}\n                {(() => {\n                  if (course.projectId != null && course.projectId !== \"\") {\n                    return (\n                    <AccordionDetails key={course._id} style={{ justifyContent: \"flex-end\" }}>\n                      <Link to=\"/\" style={{ textDecoration: 'none', paddingRight: \"25px\" }}>View Project</Link>\n                    </AccordionDetails>\n                    )\n                  }\n                })()}\n            </Accordion>\n          ))} \n        </Grid>\n        {/* Second hald of courses */}\n        <Grid item xs={12} sm={6}>\n          {/* Iterate through each course to make accordions */}\n          {secondCourses.map(course => (\n            <Accordion key={course._id} expanded={expanded === 'panel' + course._id} onChange={handleChange('panel' + course._id)}>\n              <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panelbh-content\" + course._id} id={\"panelbh-header\" + course._id} >\n                <Typography className={classes.heading}>{course.name}</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Typography variant=\"body1\" color=\"textSecondary\">{course.description}</Typography>\n              </AccordionDetails>\n                  {/* Adjust technologies array into a string with spaces and commas if the course contains technologies */}\n                  {(() => {\n                    if (course.technology.length !== 0) {\n                      let technologies = \"\";\n\n                      course.technology.map((tech, index) => (\n                        technologies += tech + (index < course.technology.length - 1 ? ',\\u00A0 ' : ' ')\n                      ))\n\n                      return (\n                        <AccordionDetails>\n                          <Typography key={course} variant=\"body2\" color=\"textSecondary\"><b>Technologies Used:</b> {technologies}</Typography>\n                        </AccordionDetails>\n                      )\n                    }\n                  })()}\n                {/* Add button to view the associated project if the course contains a project */}\n                {(() => {\n                  if (course.projectId != null && course.projectId !== \"\") {\n                    return (\n                    <AccordionDetails key={course._id} style={{ justifyContent: \"flex-end\" }}>\n                      <Link to=\"/\" style={{ textDecoration: 'none', paddingRight: \"25px\" }}>View Project</Link>\n                    </AccordionDetails>\n                    )\n                  }\n                })()}\n            </Accordion>\n          ))}\n        </Grid>\n      </Container>\n    </section>\n\n  )\n}"]},"metadata":{},"sourceType":"module"}