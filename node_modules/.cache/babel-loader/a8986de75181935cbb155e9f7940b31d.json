{"ast":null,"code":"var _jsxFileName = \"/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/Recommendations.js\";\nimport React, { useEffect } from 'react';\nimport MediaQuery from 'react-responsive';\nimport { Link } from 'react-router-dom';\nimport { Grid, Container, Typography, Box, Avatar, IconButton } from '@material-ui/core';\nimport service from '../services/RecommendationService';\nimport theme from '../theme/theme';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Mail, LinkedIn } from '@material-ui/icons';\nimport MarkReha from './../images/MarkReha.jpg';\nimport ShadSluiter from './../images/ShadSluiter.jpg';\nimport ColeParker from './../images/ColeParker.jpg';\nimport TimTurner from './../images/TimTurner.jpg';\n/**\n * MyPortfolio\n * @Author Holland Aucoin\n * \n * Recommendations\n * @Summary This component displays recommendations and information about the author\n */\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    justifyContent: 'center'\n  },\n  avatar: {\n    width: theme.spacing(14),\n    height: theme.spacing(14),\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: theme.spacing(2)\n  }\n}));\nexport default function App() {\n  // Creating variable for recommendations\n  const [recommendations, setRecommendations] = React.useState([]); // Use useEffect method to call backend for course information and wait for response\n\n  useEffect(() => {\n    service.getRecommendations().then(response => {\n      setRecommendations(response.data);\n    });\n  }, []);\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    pt: 8,\n    pb: 12,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mb: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"The Pipers\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"We are the guys that made this whole thing possible.\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 8,\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MediaQuery, {\n    minWidth: theme.breakpoints.values.iPad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, recommendations.map((recommendation, index) => (() => {\n    let email = \"mailto:\" + recommendation.contact[1];\n\n    if (index % 2 === 0) {\n      return [/*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        alt: \"\",\n        src: recommendation.image,\n        className: classes.avatar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h6\",\n        component: \"h4\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 49\n        }\n      }, recommendation.name), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"primary\",\n        component: \"span\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 49\n        }\n      }, recommendation.position), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 148\n        }\n      }), /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"LinkedIn\",\n        onClick: () => window.open(recommendation.contact[0], \"_blank\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(LinkedIn, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 53\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"Mail\",\n        button: \"true\",\n        key: \"Email\",\n        component: \"a\",\n        href: email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Mail, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 53\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 9,\n        style: {\n          textAlign: \"justify\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 49\n        }\n      }, \"\\\"\", recommendation.letter, \"\\\"\"))];\n    } else {\n      return [/*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 9,\n        style: {\n          textAlign: \"justify\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 49\n        }\n      }, \"\\\"\", recommendation.letter, \"\\\"\")), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        alt: \"\",\n        src: TimTurner,\n        className: classes.avatar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h6\",\n        component: \"h4\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 49\n        }\n      }, recommendation.name), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"primary\",\n        component: \"span\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 49\n        }\n      }, recommendation.position), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 148\n        }\n      }), /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"LinkedIn\",\n        onClick: () => window.open(\"https://www.linkedin.com/in/hollandaucoin/\", \"_blank\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(LinkedIn, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 53\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"LinkedIn\",\n        onClick: () => window.open(\"https://www.linkedin.com/in/hollandaucoin/\", \"_blank\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Mail, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 53\n        }\n      })))];\n    }\n  })())), /*#__PURE__*/React.createElement(MediaQuery, {\n    maxWidth: theme.breakpoints.values.iPad - 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, recommendations.map(recommendation => [/*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"\",\n    src: recommendations.image,\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h4\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 37\n    }\n  }, recommendation.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"primary\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 37\n    }\n  }, recommendation.position)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 9,\n    style: {\n      textAlign: \"justify\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 37\n    }\n  }, recommendation.letter))]))))));\n}","map":{"version":3,"sources":["/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/Recommendations.js"],"names":["React","useEffect","MediaQuery","Link","Grid","Container","Typography","Box","Avatar","IconButton","service","theme","makeStyles","Mail","LinkedIn","MarkReha","ShadSluiter","ColeParker","TimTurner","useStyles","container","justifyContent","avatar","width","spacing","height","marginLeft","marginRight","marginBottom","App","recommendations","setRecommendations","useState","getRecommendations","then","response","data","classes","breakpoints","values","iPad","map","recommendation","index","email","contact","image","name","position","window","open","textAlign","letter"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport MediaQuery from 'react-responsive';\nimport { Link } from 'react-router-dom';\nimport { Grid, Container, Typography, Box, Avatar, IconButton } from '@material-ui/core';\nimport service from '../services/RecommendationService';\nimport theme from '../theme/theme';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Mail, LinkedIn } from '@material-ui/icons';\nimport MarkReha from './../images/MarkReha.jpg';\nimport ShadSluiter from './../images/ShadSluiter.jpg';\nimport ColeParker from './../images/ColeParker.jpg';\nimport TimTurner from './../images/TimTurner.jpg';\n\n/**\n * MyPortfolio\n * @Author Holland Aucoin\n * \n * Recommendations\n * @Summary This component displays recommendations and information about the author\n */\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        justifyContent: 'center'\n    },\n    avatar: {\n        width: theme.spacing(14),\n        height: theme.spacing(14),\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginBottom: theme.spacing(2)\n    },\n}));\n\nexport default function App() {\n\n    // Creating variable for recommendations\n    const [recommendations, setRecommendations] = React.useState([]);\n\n    // Use useEffect method to call backend for course information and wait for response\n    useEffect(() => {\n        service.getRecommendations().then(response => {\n            setRecommendations(response.data);\n        })\n    }, []);\n\n    const classes = useStyles();\n\n    return (\n\n        <section>\n            <Container maxWidth=\"md\">\n                <Box pt={8} pb={12} textAlign=\"center\">\n                    <Box mb={8}>\n                        <Typography variant=\"h4\" component=\"h2\" gutterBottom={true}>The Pipers</Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">We are the guys that made this whole thing possible.</Typography>\n                    </Box>\n                    <Grid container spacing={8} className={classes.container}>\n                        <MediaQuery minWidth={theme.breakpoints.values.iPad}>\n                            {recommendations.map((recommendation, index) => (\n                                (() => {\n                                    let email = \"mailto:\" + recommendation.contact[1];\n\n                                    if (index % 2 === 0) {\n                                        return ([\n                                            <Grid item xs={12} sm={3}>\n                                                <Avatar alt=\"\" src={recommendation.image} className={classes.avatar} />\n                                                <Typography variant=\"h6\" component=\"h4\" gutterBottom={true}>{recommendation.name}</Typography>\n                                                <Typography variant=\"body1\" color=\"primary\" component=\"span\">{recommendation.position}</Typography><br/>\n                                                <IconButton aria-label=\"LinkedIn\" onClick={() => window.open(recommendation.contact[0], \"_blank\")}>\n                                                    <LinkedIn />\n                                                </IconButton>\n                                                <IconButton aria-label=\"Mail\" button=\"true\" key=\"Email\" component=\"a\" href={email}>\n                                                    <Mail />\n                                                </IconButton>\n                                            </Grid>,\n                                            <Grid item xs={12} sm={9} style={{ textAlign: \"justify\" }}>\n                                                <Typography gutterBottom={true}>\"{recommendation.letter}\"</Typography>\n                                            </Grid>\n                                        ])\n                                    }\n                                    else {\n                                        return ([\n                                            <Grid item xs={12} sm={9} style={{ textAlign: \"justify\" }}>\n                                                <Typography gutterBottom={true}>\"{recommendation.letter}\"</Typography>\n                                            </Grid>,\n                                            <Grid item xs={12} sm={3}>\n                                                <Avatar alt=\"\" src={TimTurner} className={classes.avatar} />\n                                                <Typography variant=\"h6\" component=\"h4\" gutterBottom={true}>{recommendation.name}</Typography>\n                                                <Typography variant=\"body1\" color=\"primary\" component=\"span\">{recommendation.position}</Typography><br/>\n                                                <IconButton aria-label=\"LinkedIn\" onClick={() => window.open(\"https://www.linkedin.com/in/hollandaucoin/\", \"_blank\")}>\n                                                    <LinkedIn />\n                                                </IconButton>\n                                                <IconButton aria-label=\"LinkedIn\" onClick={() => window.open(\"https://www.linkedin.com/in/hollandaucoin/\", \"_blank\")}>\n                                                    <Mail />\n                                                </IconButton>\n                                            </Grid>\n                                        ])\n                                    }\n                                })()\n                            ))}\n                        </MediaQuery>\n                        <MediaQuery maxWidth={theme.breakpoints.values.iPad - 1}>\n                            {recommendations.map((recommendation) => ([\n                                <Grid item xs={12} sm={3}>\n                                    <Avatar alt=\"\" src={recommendations.image} className={classes.avatar} />\n                                    <Typography variant=\"h6\" component=\"h4\" gutterBottom={true}>{recommendation.name}</Typography>\n                                    <Typography variant=\"body1\" color=\"primary\" component=\"span\">{recommendation.position}</Typography>\n                                </Grid>,\n                                <Grid item xs={12} sm={9} style={{ textAlign: \"justify\" }}>\n                                    <Typography gutterBottom={true}>{recommendation.letter}</Typography>\n                                </Grid>\n                            ]))}\n                        </MediaQuery>\n                    </Grid>\n                </Box>\n            </Container>\n        </section>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}